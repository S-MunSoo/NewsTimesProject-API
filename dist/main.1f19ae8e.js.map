{"version":3,"sources":["main.js"],"names":["news","menus","document","querySelectorAll","forEach","menu","addEventListener","event","getNewsByTopic","searchButton","getElementById","url","getNews","header","Headers","fetch","headers","response","json","data","articles","console","log","render","getElNews","URL","target","textContent","topic","toLowerCase","getNewsByKeyword","keyword","value","newsHTMl","map","item","media","title","summary","length","substring","rights","published_date","join","innerHTML"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"..","sourcesContent":["// api : 3kuPZHI0QFA2W3JFflmZezQxiKlQzLcbFCWaNQtd9iQ\n// js에서 api부르는 함수\n// url 준비->헤더 준비->서버에 요청->데이터 보여짐.\n// 뉴스 뽑아내기(보여주기) let news [] = articles\n\nlet news = [];\nlet menus = document.querySelectorAll(\".menus button\");\n\n// foreach 를 통한 각각 메뉴 에다가 아이템을 준다 메뉴 반복\nmenus.forEach((menu) =>\n  menu.addEventListener(\"click\", (event) => getNewsByTopic(event))\n);\n// 검색 버튼 클릭 변수\nlet searchButton = document.getElementById(\"search-button\");\nlet url; // url 지역변수 대신 전역변수 선언\n\nconst getNews = async () => {\n  let header = new Headers({\n    \"x-api-key\": \"3kuPZHI0QFA2W3JFflmZezQxiKlQzLcbFCWaNQtd9iQ\",\n  });\n  let response = await fetch(url, { headers: header }); // 데이터를 보내는 방식 fetch 하지만 아직 데이터가 안와서 await로 기다려준다\n  let data = await response.json(); // response 응답객체와 세트 (json : 서버통신에서 많이쓰이는 자료형 타입)\n  news = data.articles;\n  console.log(news);\n\n  render(); // render ui에 뿌려진 뉴스를 호이스팅을 이용해 호출한다.\n};\n\n// 메인 뉴스 페이지\nconst getElNews = () => {\n  // js url 클래스\n  url = new URL(\n    `https://api.newscatcherapi.com/v2/latest_headlines?countries=KR&topic=sport&page_size=10`\n  );\n  getNews();\n};\n\n// 각 메뉴들을 클릭 했을때 페이지 종류별로 페이지를 가져온다.\n// articles 뽑아주기\nconst getNewsByTopic = (event) => {\n  console.log(\"클릭\", event.target.textContent);\n  let topic = event.target.textContent.toLowerCase();\n  url = new URL(\n    `https://api.newscatcherapi.com/v2/latest_headlines?countries=KR&page_size=10&topic=${topic}`\n  );\n  getNews();\n};\n\n// 검색 버튼 함수\nconst getNewsByKeyword = async () => {\n  // 1. 검색 키워드 읽어오기\n  // 2. url에 검색 키워드 입력하기\n  // 3. 헤더준비\n  // 4. url 부르기\n  // 5.데이터 가져오기\n  // 6.데이터 보여주기\n\n  // 1. input에 있는 키워드 불러오기 id(search-input)복사해서 가져온다 뒤에 .value(값)을 붙여준다\n  let keyword = document.getElementById(\"search-input\").value;\n  url = new URL(\n    `https://api.newscatcherapi.com/v2/search?q=${keyword}&page_size=10`\n  );\n  getNews();\n};\n\n// textContent : 태그 안에 있는 내용만 가지고 온다.\n// for문 대신 array 배열(news) map을 사용하여 새로운 배열데이터를 html에 뿌려준다.\n// toLowerCase() : 소문자로 변경해주는 함수\nconst render = () => {\n  let newsHTMl = \"\";\n  newsHTMl = news\n    // newsHTMl = news 여기서의 news 배열 그자체이고, .map((item)에 있는 news는 각각의 배열 아이템들 이다.\n    .map((item) => {\n      return `<div class=\"news-list\">\n    <div class=\"img-area\">\n      <img\n        src=\"${item.media}\"\n        alt=\"\"\n      />\n    </div>\n    <div class=\"text-area\">\n      <h2>${item.title}</h2>\n      <p>${\n        item.summary == null || item.summary == \"\"\n          ? \"내용없음\"\n          : item.summary.length > 200\n          ? item.summary.substring(0, 200) + \"...\"\n          : item.summary\n      }</p>\n      <div>${item.rights} * ${item.published_date}</div>\n    </div>\n  </div>`;\n    })\n    .join(\"\");\n  // news는 배열데이터라 ui에(콤마)가 보인다 .join('')를 이용해 배열->string으로 바꿔 콤마표시를 제거해준다.\n  // ${news.media} : ui에 고정된 이미지 글들을 문자보간 방식으로 api에서 꺼내와 변경해준다.\n  document.getElementById(\"header-board\").innerHTML = newsHTMl;\n};\n// 화살표 함수 사용시 호이스팅이 안되기 때문에 searchButton을 아래쪽으로 이동해주었다.\nsearchButton.addEventListener(\"click\", getNewsByKeyword);\ngetElNews();\n"]}